openapi: 3.0.0
info:
  title: Auth API
  description: 사용자 인증 API를 정의하는 문서입니다.
  version: 0.0.1
servers:
  - url: https://api.locat.com
    description: Production
paths:
  /api/v1/auth:
    description: OAuth2 사용자 인증 API
    post:
      summary: 소셜 로그인 기반 사용자 인증을 처리합니다.
      requestBody:
        $ref: "#/components/requestBodies/OAuth2AuthorizeRequest"
      responses:
        200:
          $ref: "#/components/responses/LocatTokenDto"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/components/schemas/ErrorResponse"
  /api/v1/auth/renew:
    description: 토큰 갱신 API
    post:
      summary: Refresh 토큰을 이용하여 Access 토큰을 갱신합니다.
      requestBody:
        $ref: "#/components/requestBodies/TokenRenewRequest"
      responses:
        200:
          $ref: "#/components/responses/LocatTokenDto"
        401:
          description: "Unauthorized(유효하지 않은 포맷, 서명 등)"
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/components/schemas/ErrorResponse"
        500:
          description: "Internal Server Error"
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/components/schemas/ErrorResponse"
  /api/v1/auth/email-verification:
    description: 이메일 인증 메일 발송 요청 API
    post:
      summary: 이메일 인증 코드를 발송합니다.
      requestBody:
        $ref: "#/components/requestBodies/EmailVerificationRequest"
      responses:
        204:
          description: "인증 메일 발송 성공"
        400:
          description: "Bad Request(이메일 주소 형식 오류)"
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/components/schemas/ErrorResponse"
        500:
          description: "Internal Server Error(이메일 발송 실패)"
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/components/schemas/ErrorResponse"
  /api/v1/auth/email-verification/verify:
    description: 이메일 인증 코드 검증 API
    post:
      summary: 이메일 인증 코드를 검증합니다.
      requestBody:
        $ref: "#/components/requestBodies/EmailVerificationRequest"
      responses:
        204:
          description: "인증 성공"
        400:
          description: "Bad Request(이메일 주소 형식 오류)"
          content:
            application/json:
              schema:
                $ref: "schemas.yaml#/components/schemas/ErrorResponse"
components:
  requestBodies:
    OAuth2AuthorizeRequest:
      required: true
      description: "OAuth2 인증 요청"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OAuth2AuthorizeRequest"
    TokenRenewRequest:
      required: true
      description: "토큰 갱신 요청"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TokenRenewRequest"
    EmailVerificationRequest:
      required: true
      description: "이메일 인증 요청"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/EmailVerificationRequest"
  responses:
    LocatTokenDto:
      description: "사용자 인증 성공"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LocatTokenDto"
  schemas:
    LocatTokenDto:
      description: "JWT 발급 응답"
      type: object
      properties:
        grantType:
          type: string
          nullable: false
          example: "Bearer"
          description: "토큰 타입(Bearer로 고정)"
        accessToken:
          type: string
          nullable: false
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.***"
          description: "Access 토큰"
        refreshToken:
          type: string
          nullable: true
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.***"
          description: "Refresh 토큰(토큰 갱신 시에는 nullable)"
        accessTokenExpiresIn:
          type: integer
          nullable: false
          example: 7200
          description: "Access 토큰 만료 시간(초)"
        refreshTokenExpiresIn:
          type: integer
          nullable: true
          example: 604800
          description: "Refresh 토큰 만료 시간(초, 토큰 갱신 시에는 nullable)"
    OAuth2AuthorizeRequest:
      description: "OAuth2 인증 요청"
      type: object
      properties:
        provider:
          type: string
          enum:
            - "KAKAO"
            - "APPLE"
          description: "소셜 로그인 제공자"
        code:
          type: string
          example: "OKR8jXv9ACEe2bBkOf05"
          description: "소셜 로그인 인가 코드"
    TokenRenewRequest:
      description: "토큰 갱신 요청"
      type: object
      required:
        - accessToken
        - refreshToken
      properties:
        accessToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.***"
          description: "Access 토큰"
        refreshToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.***"
          description: "Refresh 토큰"
    EmailVerificationRequest:
      description: "이메일 인증 요청"
      type: object
      required:
        - email
      properties:
        email:
          type: string
          example: "helloworld@locat.com"
          description: "인증 메일을 보낼 이메일 주소"
        code:
          type: string
          example: "B9AF2S"
          description: "이메일 인증 코드(6자리)"


